// <auto-generated />
using System;
using Lib1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace lib1.Migrations
{
    [DbContext(typeof(Lib1DbContext))]
    [Migration("20210114194457_perkele")]
    partial class perkele
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lib1.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            FirstName = "Magiska",
                            LastName = "Fingrar"
                        },
                        new
                        {
                            AuthorId = 2,
                            FirstName = "Blåa",
                            LastName = "Svanen"
                        },
                        new
                        {
                            AuthorId = 3,
                            FirstName = "Space",
                            LastName = "Jam"
                        },
                        new
                        {
                            AuthorId = 4,
                            FirstName = "Nils",
                            LastName = "Petersson"
                        });
                });

            modelBuilder.Entity("Lib1.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("Isbn")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            Isbn = 14324,
                            Rating = 8,
                            Title = "Svärdet i Stenen",
                            Year = 2012
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2,
                            Isbn = 15423,
                            Rating = 7,
                            Title = "Tintins värld",
                            Year = 2013
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 3,
                            Isbn = 78345,
                            Rating = 5,
                            Title = "Titanic",
                            Year = 1997
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 4,
                            Isbn = 17234,
                            Rating = 4,
                            Title = "Braveheart",
                            Year = 1998
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 4,
                            Isbn = 71234,
                            Rating = 1,
                            Title = "Robinhood",
                            Year = 1843
                        });
                });

            modelBuilder.Entity("Lib1.Models.BookAuthor", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 3
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 4
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 4
                        });
                });

            modelBuilder.Entity("Lib1.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("BookId")
                        .IsUnique();

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            BookId = 1
                        },
                        new
                        {
                            InventoryId = 2,
                            BookId = 2
                        },
                        new
                        {
                            InventoryId = 3,
                            BookId = 3
                        },
                        new
                        {
                            InventoryId = 4,
                            BookId = 4
                        },
                        new
                        {
                            InventoryId = 5,
                            BookId = 5
                        });
                });

            modelBuilder.Entity("Lib1.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LibraryCard")
                        .HasColumnType("int");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            FirstName = "Nalle",
                            LastName = "Puh",
                            LibraryCard = 0,
                            Phonenumber = "070-100000"
                        },
                        new
                        {
                            MemberId = 2,
                            FirstName = "Ture",
                            LastName = "Sventon",
                            LibraryCard = 0,
                            Phonenumber = "070-200000"
                        },
                        new
                        {
                            MemberId = 3,
                            FirstName = "Nils",
                            LastName = "Pyssling",
                            LibraryCard = 0,
                            Phonenumber = "070-300000"
                        });
                });

            modelBuilder.Entity("Lib1.Models.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentDue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RentalId");

                    b.HasIndex("BookId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("MemberId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            RentalId = 1,
                            InventoryId = 1,
                            MemberId = 1,
                            RentDue = new DateTime(2020, 8, 30, 3, 30, 0, 0, DateTimeKind.Unspecified),
                            RentalDate = new DateTime(2020, 7, 30, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2020, 8, 30, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RentalId = 2,
                            InventoryId = 5,
                            MemberId = 2,
                            RentDue = new DateTime(2020, 9, 30, 3, 30, 0, 0, DateTimeKind.Unspecified),
                            RentalDate = new DateTime(2020, 9, 30, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RentalId = 3,
                            InventoryId = 4,
                            MemberId = 3,
                            RentDue = new DateTime(2020, 10, 30, 3, 30, 0, 0, DateTimeKind.Unspecified),
                            RentalDate = new DateTime(2020, 11, 30, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RentalId = 4,
                            InventoryId = 6,
                            MemberId = 1,
                            RentDue = new DateTime(2020, 11, 30, 3, 30, 0, 0, DateTimeKind.Unspecified),
                            RentalDate = new DateTime(2021, 1, 15, 6, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Lib1.Models.BookAuthor", b =>
                {
                    b.HasOne("Lib1.Models.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lib1.Models.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lib1.Models.Inventory", b =>
                {
                    b.HasOne("Lib1.Models.Book", "Book")
                        .WithOne("Inventory")
                        .HasForeignKey("Lib1.Models.Inventory", "BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lib1.Models.Rental", b =>
                {
                    b.HasOne("Lib1.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId");

                    b.HasOne("Lib1.Models.Inventory", "Inventory")
                        .WithMany("Rentals")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lib1.Models.Member", "Member")
                        .WithMany("Rentals")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
